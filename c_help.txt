seq 100| xargs -Iz \
./src/csmith --probability-configuration prob.txt \
--no-argc --no-bitfields --no-checksum --no-compound-assignment --concise --no-consts \
--no-pre-incr-operator --no-pre-decr-operator --no-post-incr-operator --no-post-decr-operator \
--no-unary-plus-operator --no-jumps --no-longlong --no-int8 --no-uint8 --no-float --no-math64 \
--max-array-dim 1 --max-block-depth 3 --max-expr-complexity 1 --max-pointer-depth 1 --quiet \
--no-unions --no-volatiles --no-volatile-pointers --no-const-pointers --no-global-variables \
--no-builtins --no-inline-function --ccomp --no-return-structs --no-arg-structs --no-vol-struct-union-fields \
--no-const-struct-union-fields --no-dangling-global-pointers --no-return-dead-pointer \
--strict-float --no-signed-char-index --no-safe-math --no-force-non-uniform-arrays \
--fresh-array-ctrl-var-names --arrays --max-funcs 2 \
| grep whilep


Command line options:

  --help or -h: print this information.

  -hh: describe extra options probably useful only for Csmith developers.

  --version or -v: print the version of Csmith.

  --seed <seed> or -s <seed>: use <seed> instead of a random seed generated by Csmith.

  --output <filename> or -o <filename>: specify the output file name.

  --argc | --no-argc: genereate main function with/without argv and argc being passed (enabled by default).

  --arrays | --no-arrays: enable | disable arrays (enabled by default).

  --bitfields | --no-bitfields: enable | disable full-bitfields structs (enabled by default).

  --checksum | --no-checksum: enable | disable checksum calculation (enabled by default).

  --comma-operators | --no-comma-operators: enable | disable comma operators (enabled by default).

  --compound-assignment | --no-compound-assignment: enable | disable compound assignments (enabled by default).

  --concise: generated programs with minimal comments (disabled by default).

  --consts | --no-consts: enable | disable const qualifier (enabled by default).

  --divs | --no-divs: enable | disable divisions (enabled by default).

  --embedded-assigns | --no-embedded-assigns: enable | disable embedded assignments as sub-expressions (enabled by default).

  --pre-incr-operator | --no-pre-incr-operator: enable | disable pre ++ operator (enabled by default).

  --pre-decr-operator | --no-pre-decr-operator: enable | disable pre -- operator (enabled by default).

  --post-incr-operator | --no-post-incr-operator: enable | disable post ++ operator (enabled by default).

  --post-decr-operator | --no-post-decr-operator: enable | disable post -- operator (enabled by default).

  --unary-plus-operator | --no-unary-plus-operator: enable | disable + operator (enabled by default).

  --jumps | --no-jumps: enable | disable jumps (enabled by default).

  --longlong| --no-longlong: enable | disable long long (enabled by default).

  --int8 | --no-int8: enable | disable int8_t (enabled by default).

  --uint8 | --no-uint8: enable | disable uint8_t (enabled by default).

  --float | --no-float: enable | disable float (disabled by default).

  --main | --nomain: enable | disable to generate main function (enabled by default).

  --math64 | --no-math64: enable | disable 64-bit math ops (enabled by default).

  --inline-function | --no-inline-function: enable | disable inline attributes on generated functions.

  --inline-function-prob <num>: set the probability of each function being marked as inline (default is 50).

  --max-array-dim <num>: limit array dimensions to <num>. (default 3)

  --max-array-len-per-dim <num>: limit array length per dimension to <num> (default 10).

  --max-block-depth <num>: limit depth of nested blocks to <num> (default 5).

  --max-block-size <size>: limit the number of non-return statements in a block to <size> (default 4).

  --max-expr-complexity <num>: limit expression complexities to <num> (default 10).

  --max-funcs <num>: limit the number of functions (besides main) to <num>  (default 10).

  --max-pointer-depth <depth>: limit the indirect depth of pointers to <depth> (default 2).

  --max-struct-fields <num>: limit the number of struct fields to <num> (default 10). 

  --max-union-fields <num>: limit the number of union fields to <num> (default 5). 

  --muls | --no-muls: enable | disable multiplications (enabled by default).

  --safe-math | --no-safe-math: Emit safe math wrapper functions (enabled by default).

  --packed-struct | --no-packed-struct: enable | disable packed structs by adding #pragma pack(1) before struct definition (enabled by default).

  --paranoid | --no-paranoid: enable | disable pointer-related assertions (disabled by default).

  --pointers | --no-pointers: enable | disable pointers (enabled by default).

  --quiet: generate programs with less comments (disabled by default).

  --structs | --no-structs: enable | disable to generate structs (enable by default).

  --unions | --no-unions: enable | disable to generate unions (enable by default).

  --volatiles | --no-volatiles: enable | disable volatiles (enabled by default).

  --volatile-pointers | --no-volatile-pointers: enable | disable volatile pointers (enabled by default).

  --const-pointers | --no-const-pointers: enable | disable const pointers (enabled by default).

  --global-variables | --no-global-variables: enable | disable global variables (enabled by default).

  --builtins | --no-builtins: enable | disable to generate builtin functions (disabled by default).

  --enable-builtin-kinds k1,k2 | --disable-builtin-kinds k1,k2: enable | disable certain kinds of builtin functions.

  --builtin-function-prob <num>: set the probability of choosing a builtin function (default is 20).

  --lang-cpp : generate C++ code (C by default).

  --cpp11 : generate C++11 code (C++03 by default). Works if lang-cpp is enabled.

'Advanced' command line options that are probably only useful for Csmith's
original developers:

  --max-split-files <num>: evenly split a generated program into <num> different files(default 0).

  --split-files-dir <dir>: generate split-files into <dir> (default ./output).

  --dfs-exhaustive: enable depth first exhaustive random generation (disabled by default).

  --expand-struct: enable the expansion of struct in the exhaustive mode. Only works in the exhaustive mode and cannot used with --no-structs.

  --compact-output: print generated programs in compact way. Only works in the exhaustive mode.

  --max-nested-struct-level <num>: limit maximum nested level of structs to <num>(default 0). Only works in the exhaustive mode.

  --struct-output <file>: dump structs declarations to <file>. Only works in the exhaustive mode.

  --prefix-name: prefix names of global functions and variables with increasing numbers. Only works in the exhaustive mode.

  --sequence-name-prefix: prefix names of global functions and variables with sequence numbers.Only works in the exhaustive mode.

  --compatible-check: disallow trivial code such as i = i in random programs. Only works in the exhaustive mode.

  --msp: enable certain msp related features 

  --ccomp: generate compcert-compatible code

  --splat: enable splat extension

  --klee: enable klee extension

  --crest: enable crest extension

  --coverage-test: enable coverage-test extension

  --coverage-test-size <num>: specify size (default 500) of the array generated to test coverage. Can only be used with --coverage-test.

  --func1_max_params <num>: specify the number of symbolic variables passed to func_1 (default 3). Only used when --splat | --crest | --klee | --coverage-test is enabled.

  --fixed-struct-fields: fix the size of struct fields to max-struct-fields (default 10).

  --return-structs | --no-return-structs: enable | disable return structs from a function (enabled by default).

  --arg-structs | --no-arg-structs: enable | disable structs being used as args (enabled by default).

  --return-unions | --no-return-unions: enable | disable return unions from a function (enabled by default).

  --arg-unions | --no-arg-unions: enable | disable unions being used as args (enabled by default).

  --take-union-field-addr | --take-no-union-field-addr: allow | disallow addresses of union fields to be taken (allowed by default).

  --vol-struct-union-fields | --no-vol-struct-union-fields: enable | disable volatile struct/union fields (enabled by default)

  --const-struct-union-fields | --no-const-struct-union-fields: enable | disable const struct/union fields (enabled by default)

  --delta-monitor [simple]: specify the type of delta monitor. Only [simple] type is supported now.

  --delta-input [file]: specify the file for delta input.

  --delta-output [file]: specify the file for delta output (default to <delta-input>).

  --go-delta [simple]: run delta reduction on <delta-input>.

  --no-delta-reduction: output the same program as <delta-input>. Only works with --go-delta option.

  --dump-default-probabilities <file>: dump the default probability settings into <file>

  --dump-random-probabilities <file>: dump the randomized probabilities into <file>

  --probability-configuration <file>: use probability configuration <file>

  --random-random: enable random probabilities.

  --enable-access-once: enable testing access once macro.

  --strict-volatile-rule: make sure only one volatile access between any pair of sequence points. 

  --addr-taken-of-locals: enable addr-taken of local vars. [default]

  --no-addr-taken-of-locals: disable addr-taken of local vars. 

  --fresh-array-ctrl-var-names: create fresh names [i1,i2,i3...] for array control vars rather than use unique names such as i, j, k.

  --math-notmp: make csmith generate code for safe_math_macros_notmp.

  --strict-const-arrays: restrict array elements to constants.

  --partial-expand <assignment[,for[,block[,if-else[,invoke[,return]]]]]: partial-expand controls which what kind of statements should be generated first. For example, it could make Csmith start to generate if-else without go over assignment or for.

  --dangling-global-pointers | --no-dangling-global-pointers: enable | disable to reset all dangling global pointers to null at the end of main. (enabled by default)

  --check-global: print the values of all integer global variables.

  --monitor-funcs <name1,name2...>: dump the checksums after each statement in the monitored functions.

  --step-hash-by-stmt: dump the checksum after each statement. It is applied to all functions unless --monitor-funcs is specified.

  --stop-by-stmt <num>: try to stop generating statements after the statement with id <num>.

  --const-as-condition: enable const to be conditions of if-statements. 

  --match-exact-qualifiers: match exact const/volatile qualifiers for LHS and RHS of assignments.

  --reduce <file>: reduce random program under the direction of the configuration file.

  --return-dead-pointer | --no-return-dead-pointer: allow | disallow functions from returning dangling pointers (disallowed by default).

  --identify-wrappers: assign ids to used safe math wrappers.

  --safe-math-wrappers <id1,id2...>: specifiy ids of wrapper functions that are necessary to avoid undefined behaviors, use 0 to specify none.

  --mark-mutable-const: mark constants that can be mutated with parentheses (disabled by default).

  --force-non-uniform-arrays | --no-force-non-uniform-arrays: force integer arrays to be initialized with multiple values (enabled by default).

  --null-ptr-deref-prob <N>: allow null pointers to be dereferenced with probability N% (0 by default).

  --dangling-ptr-deref-prob <N>: allow dangling pointers to be dereferenced with probability N% (0 by default).

  --union-read-type-sensitive | --no-union-read-type-sensitive: allow | disallow reading an union field when there is no risk of reading padding bits (enabled by default).

  --max-struct-nested-level: controls the max depth of nested structs (default is 3).

  --no-hash-value-printf: do not emit printf on the index of an array

  --no-signed-char-index: do not allow a var of type char to be used as array index

  --strict-float: do not allow assignments between floats and integers

