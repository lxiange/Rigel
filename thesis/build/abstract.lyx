#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ../build/thesis
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 2em
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle empty
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\align center

\size larger
\emph on
\uuline on
南京大学本科生毕业论文中文摘要首页用纸
\size default
\emph default
\uuline default

\begin_inset VSpace 0.1cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
useKaiTi{
\end_layout

\end_inset

毕业论文题目：
\bar under

\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

基于 EMI 的编译器测试工具
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\noindent

\bar under
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

计算机科学与技术
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\bar default
专业
\bar under

\begin_inset ERT
status open

\begin_layout Plain Layout

~~2013~~
\end_layout

\end_inset


\bar default
级
\begin_inset ERT
status open

\begin_layout Plain Layout

学士
\end_layout

\end_inset

生
\begin_inset space \enskip{}
\end_inset

姓名：
\bar under

\begin_inset ERT
status open

\begin_layout Plain Layout

~~李想~~
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
指导教师(姓名、职称)：
\bar under

\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

许畅~教授
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\bar default

\begin_inset ERT
status open

\begin_layout Plain Layout

}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\series bold
\size large
摘
\begin_inset space \quad{}
\end_inset

要
\series default
\size default

\begin_inset VSpace 0.2cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

本论文介绍了一种简单、通用的编译器检测方法：EMI(equivalence modulo inputs)。该方法基于以下两步来测试编译器：
1.	动态地在给定测试输入集上运行得到程序控制流；
2.	基于程序控制流，生成等效程序执行比对测试。
事实上，这些不同的输入自然地帮助生成 EMI 变种，以帮助我们测试常规方法难以发现的编译错误。
为了实现 EMI 算法去检测目标编译器正确性，我们分析程序的执行路径，并随机删改未执行的代码以生成等价变种程序并运行。
我实现的基于 EMI 算法的 Rigel 工具发现了南京大学《编译原理》课程实验项目 C-{}- 编译器中许多常规方法未能发现的错误。

\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
关键词：
\series default

\begin_inset ERT
status open

\begin_layout Plain Layout

编译器测试；随机代码生成；自动化测试
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\size larger
\emph on
\uuline on
南京大学本科生毕业论文英文摘要首页用纸
\size default
\emph default
\uuline default

\begin_inset VSpace 0.1cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
THESIS: 
\bar under

\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

EMI based compiler testing tools
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\noindent
SPECIALIZATION: 
\bar under

\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

Computer Science
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\noindent
POSTGRADUATE: 
\bar under

\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

Shawn Lee
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\noindent
MENTOR: 
\bar under

\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

Prof. Chang Xu
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\series bold
\size large
Abstract
\series default
\size default

\begin_inset VSpace 0.2cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

We introduce equivalence modulo inputs (EMI), a simple, widely applicable methodology for compiler verification. 
This method is based on these two steps: 
1)	dynamically executing a program on some test inputs to get its control flow. 
2)	based on control flow, generate its equivalent code for comparison. 
Indeed, the test inputs induce a natural collection of the original program's EMI variants, which can help differentially test any compiler and specifically target the difficult-to-find miscompilations.
To create a practical implementation of EMI for validating C-{}-(a tiny subset of C) compilers, we profile a program's test executions and stochastically prune its unexecuted code. 
My practical realization of the EMI concept targeting C-{}- compilers via the `profile and prune' strategy has led to several confirmed, unique bugs for C-{}- compilers from `Principles and Techniques' of Compilers of Nanjing University. In the past, these miscompilations were hard to notice.

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Keywords
\series default
: 
\begin_inset ERT
status open

\begin_layout Plain Layout

Compiler testing; code generation; automated testing
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\end_body
\end_document
