#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ../build/thesis
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
结论和后续工作
\end_layout

\begin_layout Standard
本篇论文先通过几个例子表现了编译器测试的重要性，然后详细介绍了一种创新且卓有成效的 EMI(Equivalence Modulo Input)
 编译器测试方法。我们先从算法层面详细介绍其核心思想以及进行可行性分析。随后介绍了我实现的基于 EMI 方法、用于编译原理课程实验 C-- 编译器的测试工具：R
igel。我们详细介绍了其实现细节、使用方法以及运行效果。同时针对项目实现过程中的一些难点问题以及创新点进行了着重介绍。最后，感谢并简单介绍了对本次毕业设计产生
帮助的几个项目。
\end_layout

\begin_layout Standard
虽然本次毕业设计以及毕业论文到此就暂告一段落了，项目也取得了预期的效果。不过如果继续深入探索的话，依然可以有更多的工作可以做。譬如：
\end_layout

\begin_layout Itemize
提供完善美观的 UI，方便用户交互。
\end_layout

\begin_layout Itemize
添加更多配置选项，以支持更多语法特性。
\end_layout

\begin_layout Itemize
优化日志和报错处理逻辑，方便用户更快定位 Bug 位置以及获取更多详细信息。
\end_layout

\begin_layout Standard
同时，从工程角度，Rigel 还不够完善。文档、测试还不够充足。我们一向能正确认知项目的优点与不足，以助于日后进一步的改进。
\end_layout

\end_body
\end_document
